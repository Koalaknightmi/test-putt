[{"/home/runner/test-putt/src/index.js":"1","/home/runner/test-putt/src/serviceWorker.js":"2","/home/runner/test-putt/src/styles/theme.js":"3","/home/runner/test-putt/src/App/index.js":"4","/home/runner/test-putt/src/store/index.js":"5","/home/runner/test-putt/src/services/Firebase/index.js":"6","/home/runner/test-putt/src/services/Firebase/context.js":"7","/home/runner/test-putt/src/services/Firebase/Firebase.js":"8","/home/runner/test-putt/src/static/routes.js":"9","/home/runner/test-putt/src/reducers/index.js":"10","/home/runner/test-putt/src/components/UserSessionMonitor/index.js":"11","/home/runner/test-putt/src/pages/Home/index.js":"12","/home/runner/test-putt/src/components/Navigation/index.js":"13","/home/runner/test-putt/src/pages/Logging/index.js":"14","/home/runner/test-putt/src/pages/Regester/index.js":"15","/home/runner/test-putt/src/pages/Login/index.js":"16","/home/runner/test-putt/src/reducers/session.js":"17","/home/runner/test-putt/src/reducers/putts.js":"18","/home/runner/test-putt/src/pages/Logging/PuttList/index.js":"19","/home/runner/test-putt/src/pages/Logging/Settings/index.js":"20","/home/runner/test-putt/src/components/UserSessionMonitor/AuthContext.js":"21","/home/runner/test-putt/src/components/UserSessionMonitor/Authorization.js":"22","/home/runner/test-putt/src/pages/Logging/Logbtns.js":"23","/home/runner/test-putt/src/static/PuttingStancesAndTypes.js":"24","/home/runner/test-putt/src/utils/LocalStorage.js":"25","/home/runner/test-putt/src/utils/puttManager.js":"26","/home/runner/test-putt/src/utils/convertTo.js":"27","/home/runner/test-putt/src/pages/Logging/Settings/PuttStanceChange.js":"28","/home/runner/test-putt/src/pages/Logging/PuttList/Putt.js":"29","/home/runner/test-putt/src/pages/Logging/Settings/PuttDistChange.js":"30","/home/runner/test-putt/src/pages/Logging/Settings/PuttTypeChange.js":"31","/home/runner/test-putt/src/pages/Logging/Settings/PuttNumChange.js":"32","/home/runner/test-putt/src/pages/Logging/Settings/style.js":"33","/home/runner/test-putt/src/utils/UTCtime.js":"34","/home/runner/test-putt/src/components/SuperTable/index.js":"35","/home/runner/test-putt/src/components/SuperTable/SuperTableHeader.js":"36","/home/runner/test-putt/src/components/SuperTable/SuperTableToolbar.js":"37","/home/runner/test-putt/src/components/SuperTable/SuperTableRow.js":"38","/home/runner/test-putt/src/components/SuperTable/SuperTableBody.js":"39"},{"size":758,"mtime":1611541949465,"results":"40","hashOfConfig":"41"},{"size":5003,"mtime":1579938138329,"results":"42","hashOfConfig":"41"},{"size":225,"mtime":1611541894506,"results":"43","hashOfConfig":"41"},{"size":1017,"mtime":1611547705694,"results":"44","hashOfConfig":"41"},{"size":323,"mtime":1611449590811,"results":"45","hashOfConfig":"41"},{"size":154,"mtime":1611541700537,"results":"46","hashOfConfig":"41"},{"size":272,"mtime":1611541700537,"results":"47","hashOfConfig":"41"},{"size":2220,"mtime":1611541700537,"results":"48","hashOfConfig":"41"},{"size":680,"mtime":1611004649957,"results":"49","hashOfConfig":"41"},{"size":250,"mtime":1611460958883,"results":"50","hashOfConfig":"41"},{"size":122,"mtime":1611541722813,"results":"51","hashOfConfig":"41"},{"size":184,"mtime":1611539439265,"results":"52","hashOfConfig":"41"},{"size":2899,"mtime":1611547747373,"results":"53","hashOfConfig":"41"},{"size":5516,"mtime":1611716783242,"results":"54","hashOfConfig":"41"},{"size":7186,"mtime":1611547678719,"results":"55","hashOfConfig":"41"},{"size":3339,"mtime":1611546981075,"results":"56","hashOfConfig":"41"},{"size":392,"mtime":1611454791924,"results":"57","hashOfConfig":"41"},{"size":1832,"mtime":1611719890666,"results":"58","hashOfConfig":"41"},{"size":2213,"mtime":1611859010065,"results":"59","hashOfConfig":"41"},{"size":320,"mtime":1611539444867,"results":"60","hashOfConfig":"41"},{"size":100,"mtime":1611541722813,"results":"61","hashOfConfig":"41"},{"size":1081,"mtime":1611542152599,"results":"62","hashOfConfig":"41"},{"size":970,"mtime":1611713057944,"results":"63","hashOfConfig":"41"},{"size":258,"mtime":1611441433562,"results":"64","hashOfConfig":"41"},{"size":3507,"mtime":1611280400871,"results":"65","hashOfConfig":"41"},{"size":5632,"mtime":1611881740444,"results":"66","hashOfConfig":"41"},{"size":207,"mtime":1611441418172,"results":"67","hashOfConfig":"41"},{"size":1175,"mtime":1611539444867,"results":"68","hashOfConfig":"41"},{"size":617,"mtime":1611719887986,"results":"69","hashOfConfig":"41"},{"size":1873,"mtime":1611717515324,"results":"70","hashOfConfig":"41"},{"size":1369,"mtime":1611539444867,"results":"71","hashOfConfig":"41"},{"size":934,"mtime":1611539444867,"results":"72","hashOfConfig":"41"},{"size":222,"mtime":1611542033616,"results":"73","hashOfConfig":"41"},{"size":151,"mtime":1611716436033,"results":"74","hashOfConfig":"41"},{"size":4903,"mtime":1611891033598,"results":"75","hashOfConfig":"41"},{"size":1636,"mtime":1611889196607,"results":"76","hashOfConfig":"41"},{"size":73,"mtime":1611889042650,"results":"77","hashOfConfig":"41"},{"size":211,"mtime":1611889652064,"results":"78","hashOfConfig":"41"},{"size":114,"mtime":1611889674938,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"7rhiri",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/runner/test-putt/src/index.js",[],["169","170"],"/home/runner/test-putt/src/serviceWorker.js",[],"/home/runner/test-putt/src/styles/theme.js",[],"/home/runner/test-putt/src/App/index.js",[],"/home/runner/test-putt/src/store/index.js",["171"],"import { applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from '../reducers'\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport default store","/home/runner/test-putt/src/services/Firebase/index.js",[],"/home/runner/test-putt/src/services/Firebase/context.js",[],"/home/runner/test-putt/src/services/Firebase/Firebase.js",[],"/home/runner/test-putt/src/static/routes.js",[],"/home/runner/test-putt/src/reducers/index.js",[],"/home/runner/test-putt/src/components/UserSessionMonitor/index.js",[],"/home/runner/test-putt/src/pages/Home/index.js",[],"/home/runner/test-putt/src/components/Navigation/index.js",[],"/home/runner/test-putt/src/pages/Logging/index.js",["172","173","174","175","176","177","178","179","180","181","182","183"],"import React, {useEffect} from 'react';\nimport LS from '../../utils/LocalStorage'\nimport PuttList from './PuttList/index.js'\nimport PuttSettings from './Settings/index.js'\nimport PuttBtns from './Logbtns.js'\nimport { addFirebase } from \"../../services/Firebase\"\n\nimport {convertToFt} from '../../utils/convertTo'\nimport puttMan, {puttobj} from '../../utils/puttManager'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {addPuttToLog,startLogSession,getaddnum,getdist,getmeasurement,getStance,getType} from '../../reducers/putts'\n\nconst Default_Settings = {\n  dist:10,\n  measurement:\"ft\",\n  addnum:1,\n  type:\"Spin Putt\",\n  stance:\"Staggered\",\n  putts:null\n}\n\nconst classToObject = theClass => {\n  return JSON.parse(JSON.stringify(theClass))\n}\n\nconst LogPageBase = ({firebase}) => {\n  const addnum = useSelector(getaddnum), dist = useSelector(getdist), measurement = useSelector(getmeasurement),stance = useSelector(getStance), type = useSelector(getType);\n  const dispatch = useDispatch()\n\n  const addputts = (made) =>\n    dispatch(addPuttToLog(made));\n\n  useEffect(()=>{\n   dispatch(startLogSession)\n  },[])\n\n  return (\n    <div>\n        <p>hi</p>\n        <PuttList/>\n        <PuttSettings/>\n        <PuttBtns \n          onClicked = {addputts}\n        />\n      </div>\n  )\n}\n/*\nclass LogPageBase extends Component{\n  constructor(props) {\n    super(props);\n    this.state = Default_Settings;\n  }\n\n  setdefaults(){\n    const userdata = LS.programdata.user\n    Object.keys(userdata).forEach((key)=>{\n      if(Default_Settings[key]){\n        Default_Settings[key] = userdata[key]\n      }\n    })\n    this.setState(Default_Settings);\n  }\n\n  LOG = (e) => {\n    const Firebase = this.props.firebase\n    puttMan.sync();\n    //if(navigator.onLine){\n      let puttsToStore = [puttMan]\n      Firebase.puttlogstats(LS.programdata.user.uid)\n      .get()\n      .then((data)=>{\n        let data2 = data.data();\n        let longestPutt = data2.longestputtmade.dist ? data2.longestputtmade.dist : 0;\n        let longPutt = data2.longestputtmade\n        let longeststreak = data2.beststreak.streak ? data2.beststreak.streak : 0;\n        let longstreak = data2.beststreak\n        let curstats = data2\n        puttsToStore.forEach((putts)=>{\n          if(putts.stats.longestPutt.dist>longestPutt){\n            longPutt = putts.stats.longestPutt\n            longPutt.id = putts.id\n            curstats.longestputtmade = longPutt\n          }\n          if(putts.stats.beststreak.streak>longeststreak){\n            longstreak = putts.stats.beststreak\n            longstreak.id = putts.id\n            curstats.beststreak = longstreak\n          }\n          Object.keys(putts.stats.madebytype).forEach((key)=>{\n            if(!curstats.madebytype[key]){\n              curstats.madebytype[key] = putts.stats.madebytype[key];\n            } else{\n              curstats.madebytype[key].made += putts.stats.madebytype[key].made;\n              curstats.madebytype[key].missed += putts.stats.madebytype[key].missed;\n            }\n          })\n        curstats.timeSpentPutting += (putts.starttime - putts.endtime) * -1;\n        curstats.made += putts.stats.made\n        curstats.missed += putts.stats.missed\n        if(!curstats.lastTimePutting){\n          curstats.lastTimePutting = 0\n        }\n        if(curstats.lastTimePutting - putts.stats.lastPuttTime<0){\n          curstats.lastTimePutting = putts.stats.lastPuttTime\n        }\n        console.log(putts.id.toString())\n        Firebase\n          .puttlog(LS.programdata.user.uid,putts.id.toString())\n          .set(classToObject(putts))\n          .then(()=>{\n            console.log(classToObject(putts))\n          })\n          .catch((e)=>{\n            console.log(e)\n          })\n        })\n      Firebase\n        .puttlogstats(LS.programdata.user.uid)\n        .update(curstats)\n        .then(()=>{\n          console.log(curstats)\n        })\n        .catch((e)=>{\n          console.log(e)\n        })\n      })\n    LS.setputts({})\n    this.setState(Default_Settings);\n  }\n\n  managersync(){\n    this.setState(state => ({\n      putts:puttMan\n    }))\n  }\n\n  addputts = (made) =>{\n    puttMan.addputt(new puttobj({\n      dist:this.state.dist,\n      num:this.state.addnum,\n      made:made,\n      measurement:this.state.measurement,\n      type:this.state.type,\n      stance:this.state.stance\n    }))\n    this.managersync()\n  }\n\n  saveputts(){\n    \n  }\n\n  onChange = (e) => {\n    LS.updateprogramdata({\n      [e.target.name]: e.target.value\n    },[\"user\"])\n    this.setState(state => ({\n      [e.target.name]: e.target.value\n    }));\n  }\n  onChangeSlider = (v,n) => {\n    LS.updateprogramdata({\n      [n]: v\n    },[\"user\"])\n    this.setState(state => ({\n      [n]: v\n    }));\n  }\n\n  componentDidMount() {\n    this.props.firebase.uputtlog(LS.programdata.user.uid).get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      console.log(doc.id, \" => \", doc.data());\n    });\n});\n\n    puttMan.init()\n    this.setdefaults()\n    window.addEventListener(\"beforeunload\", this.LOG);\n  }\n\n  componentWillUnmount() {\n    this.LOG()\n    window.removeEventListener(\"beforeunload\", this.LOG);\n  }\n\n  render () {\n    return (\n      <div>\n        <p>hi</p>\n        <PuttList\n          putts = {this.state.putts}\n          displayType = \"Single\"\n        />\n        <PuttSettings/>\n        <PuttBtns \n          onClicked = {this.addputts}\n          addNum = {this.state.addnum}\n        />\n      </div>\n    )\n  }\n}*/\n\nconst LogPage = addFirebase(LogPageBase)\n\nexport default LogPage","/home/runner/test-putt/src/pages/Regester/index.js",["184","185","186","187","188"],"import React, { Component } from 'react'\nimport LS from '../../utils/LocalStorage'\nimport { addFirebase } from \"../../services/Firebase\"\nimport { Link, withRouter } from 'react-router-dom';\nimport ROUTES from '../../static/routes';\n\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {stances,types} from '../../static/PuttingStancesAndTypes'\n\nconst default_presets = {\n\tusername: \"\",\n\temail: \"\",\n\tpassword: \"\",\n\tpassword2: \"\",\n\tadmin: false,\n\tsavechecked: false,\n\terror: null,\n  canSubmit:false\n}\n\nconst putStats_presets = {\n  made:0,\n  drills:0,\n  missed:0,\n  username:\"\",\n  longestputtmade:{time:0,dist:0,id:\"\"},\n  timeSpentPutting:0,\n  lastTimePutting:0,\n  beststreak:{time:0,streak:0,id:\"\"},\n  madebytype:{}\n}\n\nfunction erroro (t,v){\n  return { type: t, value: v }\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst RegesterPage = () => (\n  <div>\n    <RegesterForm/>\n  </div>\n)\n\nclass RegesterFormBase extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = default_presets\n\t}\n\n  checkPass = (p1,p2) => {\n    if (p2 !== p1) {\n\t\t\t\treturn erroro(\"password\",\"Passwords Do Not Match!\");\n\t\t\t} else if (this.state.error && this.state.error.value === \"Passwords Do Not Match!\") {\n\t\t\t\treturn null;\n\t\t\t}\n  }\n  checkEmail = (e) =>{\n    console.log(validateEmail(e))\n    if (!validateEmail(e)) {\n      return erroro(\"email\",\"Invalid Email Address!\");\n    } else if (this.state.error && this.state.error.value === \"Invalid Email Address!\") {\n      return null;\n    }\n  }\n\n  componentDidMount (){\n    stances.forEach((s) => {\n      types.forEach((t) =>{\n        putStats_presets.madebytype[s+\"_\"+t.name.replace(\" \",\"_\")] = {\n          made:0,\n          missed:0\n        }\n      })\n    })\n  }\n\n\tonChange = (e) => {\n    let value = e.target.value\n    if (e.target.name.includes(\"pass\")) {\n      let pass1 = (e.target.name.includes(\"1\")) ? this.state.password2 : this.state.password;\n      let pass2 = value;\n      let passerror = this.checkPass(pass1,pass2)\n      let emailerror = this.checkEmail(this.state.email)\n      console.log(passerror)\n      if(passerror){\n        this.setState(state => ({\n\t\t\t\t\terror: passerror,\n          [e.target.name]: pass2,\n          canSubmit: false\n\t\t\t\t}));\n      } else if(emailerror){\n        this.setState(state => ({\n\t\t\t\t\terror: emailerror,\n          [e.target.name]: pass2,\n          canSubmit: false\n\t\t\t\t}));\n      } else{\n         this.setState(state => ({\n\t\t\t\t\terror: null,\n          [e.target.name]: pass2,\n          canSubmit: true\n\t\t\t\t}));\n      }\n\t\t} else if (e.target.name.includes(\"email\")){\n        let passerror = this.checkPass(this.state.password,this.state.password2)\n        let emailerror = this.checkEmail(value)\n        if(emailerror){\n          this.setState(state => ({\n            error: emailerror,\n            [e.target.name]: value,\n            canSubmit: false\n          }));\n        } else if(passerror){\n          this.setState(state => ({\n            error: passerror,\n            [e.target.name]: value,\n            canSubmit: false\n          }));\n        } else{\n         this.setState(state => ({\n\t\t\t\t\terror: null,\n          [e.target.name]: value,\n          canSubmit: true\n\t\t\t\t}));\n      }\n      }\n\t\tthis.setState(state => ({\n\t\t\t[e.target.name]: e.target.value,\n      canSubmit: state.error ? false : true\n\t\t}));\n\t}\n\n\tonChangeCheckbox = e => {\n\t\tthis.setState({ [e.target.name]: e.target.checked });\n\t};\n\n\tonSubmit = (e) => {\n    e.preventDefault()\n    const firebase = this.props.firebase\n    const state = this.state\n    firebase.signUpWithPassword(this.state.email,this.state.password)\n      .then((user)=>{\n        console.log(user)\n          let date = firebase.fieldValue.serverTimestamp()\n          firebase.user(user.user.uid).set({\n            username:state.username,\n            admin:false,\n            lastLogin:date,\n            dateJoined:date,\n            visits:0,\n            measurment:\"ft\",\n            dist:10,\n            stance:\"Staggered\",\n            type:\"Spin Putt\",\n            loggedIn:true\n          })\n          putStats_presets.username = state.username;\n          firebase.puttlogstats(user.user.uid).set(putStats_presets)\n          LS.updateprogramdata(putStats_presets,[\"putts\",\"stats\"])\n          console.log(\"registered\")\n      }).then(() => {\n        this.setState({ ...default_presets });\n        this.props.history.push(ROUTES[0].route);\n      }).catch((e)=>{\n        if(e.code===\"auth/email-already-in-use\"){\n          this.setState(state => ({\n            error: erroro(\"email\",\"That Email Is Already In Use!\"),\n            canSubmit: false\n          }));\n        } else if(e.code === \"auth/invalid-email\"){\n          this.setState(state => ({\n            error: erroro(\"email\",\"That Email Is Invalid!\"),\n            canSubmit: false\n          }));\n        } else if(e.code === \"auth/weak-password\"){\n          this.setState(state => ({\n            error: erroro(\"password\",\"That Password Is Too Weak!\"),\n            canSubmit: false\n          }));\n        }\n        console.log(e)\n      })\n\t}\n\n\trender() {\n\t\tconst { username, email, password, password2, savechecked, error, canSubmit } = this.state\n    return (\n      <Container>\n\t\t\t<form autoComplete=\"on\" onSubmit={this.onSubmit}>\n\t\t\t\t<TextField\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"R-username-input\"\n\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\tname=\"username\"\n          value={username}\n\t\t\t\t\terror={error && error.type === \"email\"} \n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"username\" && error.value\n\t\t\t\t\t)} />\n\t\t\t\t<TextField\n          type = \"email\"\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"R-email-input\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tname=\"email\"\n          value={email}\n\t\t\t\t\terror={error && error.type === \"email\"}\n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"email\" && error.value\n\t\t\t\t\t)} />\n\t\t\t\t<TextField\n          type = \"password\"\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"R-password-input\"\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tname=\"password\"\n          value={password}\n\t\t\t\t\terror={error&&error.type === \"password\"}\n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"password\" && error.value\n\t\t\t\t\t)} />\n\t\t\t\t<TextField\n          type = \"password\"\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"R-password2-input\"\n\t\t\t\t\tlabel=\"password2\"\n\t\t\t\t\tname=\"password2\"\n          value={password2}\n\t\t\t\t\terror={error&&error.type === \"password\"}\n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"password\" && error.value\n\t\t\t\t\t)} />\n          <Button disabled={!canSubmit} type = \"submit\" variant=\"contained\" color=\"secondary\">\n            Submit\n          </Button>\n\t\t\t</form>\n      </Container>\n\t\t)\n\t}\n}\n\nconst RegesterForm = withRouter(addFirebase(RegesterFormBase))\n\nexport default RegesterPage\n\nexport {RegesterForm}\n\n","/home/runner/test-putt/src/pages/Login/index.js",["189","190","191","192","193","194","195"],"import React, { Component } from 'react'\nimport LS from '../../utils/LocalStorage'\nimport { addFirebase } from \"../../services/Firebase\"\nimport { Link, withRouter } from 'react-router-dom';\nimport ROUTES from '../../static/routes';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst default_presets = {\n\temail: \"\",\n\tpassword: \"\",\n\tsavechecked: false,\n\terror: null,\n  canSubmit:true\n}\n\nfunction erroro (t,v){\n  return { type: t, value: v }\n}\n\nconst LoginPage = () => (\n  <div>\n    <LoginForm/>\n  </div>\n)\n\nclass LoginFormBase extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = default_presets\n\t}\n\n\tonChange = (e) => {\n\t\tthis.setState(state => ({\n\t\t\t[e.target.name]: e.target.value,\n      canSubmit:true\n\t\t}));\n\t}\n\n\tonChangeCheckbox = e => {\n\t\tthis.setState({ [e.target.name]: e.target.checked });\n\t};\n\n\tonSubmit = (e) => {\n    e.preventDefault()\n    const firebase = this.props.firebase\n    const state = this.state\n    firebase.signInWithPassword(this.state.email,this.state.password)\n      .then((user)=>{\n        console.log(user)\n        console.log(\"logged in\")\n      }).then(() => {\n        this.setState({ ...default_presets });\n        this.props.history.push(ROUTES[0].route);\n      }).catch((e)=>{\n        if(e.code===\"auth/user-not-found\"){\n          this.setState(state => ({\n            error: erroro(\"email\",\"That Email Is Not In Use!\"),\n            canSubmit: false\n          }));\n        } else if(e.code === \"auth/invalid-email\"){\n          this.setState(state => ({\n            error: erroro(\"email\",\"That Email Is Invalid!\"),\n            canSubmit: false\n          }));\n        } else if(e.code === \"auth/wrong-password\"){\n          this.setState(state => ({\n            error: erroro(\"password\",\"That Password Is Too Wrong!\"),\n            canSubmit: false\n          }));\n        }\n        console.log(e)\n      })\n\t}\n\n\trender() {\n\t\tconst {email, password, savechecked, error, canSubmit } = this.state\n    return (\n      <Container>\n      {\n\t\t\t(!LS.programdata.user ?(\n      <form autoComplete=\"on\" onSubmit={this.onSubmit}>\n\t\t\t\t<TextField\n          type = \"email\"\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"L-email-input\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tname=\"email\"\n          value={email}\n\t\t\t\t\terror={error && error.type === \"email\"}\n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"email\" && error.value\n\t\t\t\t\t)} />\n\t\t\t\t<TextField\n          type = \"password\"\n          onChange = {this.onChange}\n\t\t\t\t\tid=\"L-password-input\"\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tname=\"password\"\n          value={password}\n\t\t\t\t\terror={error&&error.type === \"password\"}\n          helperText={(error &&\n\t\t\t\t\t\terror.type === \"password\" && error.value\n\t\t\t\t\t)} />\n          <Button disabled={!canSubmit} type = \"submit\" variant=\"contained\" color=\"secondary\">\n            Submit\n          </Button>\n\t\t\t</form>) : (<div>already logged in</div>))\n      }\n      </Container>\n\t\t)\n\t}\n}\n\nconst LoginForm = withRouter(addFirebase(LoginFormBase))\n\nexport default LoginPage\n\nexport {LoginForm}\n\n","/home/runner/test-putt/src/reducers/session.js",[],"/home/runner/test-putt/src/reducers/putts.js",["196"],"import { createSlice } from '@reduxjs/toolkit'\nimport {addputt,totalrecalc,puttobj,defstats} from '../utils/puttManager'\nimport {getCurrentTimeUTC} from '../utils/UTCtime'\n\nconst initialState = {\n  settings:{\n    dist:10,\n    measurement:\"ft\",\n    addnum:1,\n    type:\"Spin Putt\",\n    stance:\"Staggered\",\n    display:\"single\"\n  },\n  putts:[],\n  stats:defstats,\n  starttime:\"\",\n  endtime:\"\",\n  id:\"\",\n  sessionStarted:false\n}\n\nconst getdist = (state) => state.puttsState.settings.dist;\nconst getmeasurement = (state) => state.puttsState.settings.measurement;\nconst getaddnum = (state) => state.puttsState.settings.addnum;\nconst getStance = (state) => state.puttsState.settings.stance;\nconst getType = (state) => state.puttsState.settings.type;\nconst getPutts = (state) => state.puttsState.putts;\nconst getDisplay = (state) => state.puttsState.settings.display;\n\nconst changeSomethingr = (state,action) => {\n  state.settings[action.payload.name] = action.payload.value\n  return state\n}\n\nconst addPuttToLogr  = (state,action) => {\n  let putt = new puttobj({\n    dist:state.settings.dist,\n    num:state.settings.addnum,\n    made:action.payload,\n    measurement:state.settings.measurement,\n    type:state.settings.type,\n    stance:state.settings.stance\n  })\n  addputt(putt,state)\n  return state\n}\n\nconst startLogSession = (state) => {\n  state.sessionStarted = true\n  let time = getCurrentTimeUTC()\n  state.id = time;\n  state.starttime = time\n  return state\n}\n\nconst puttsReducer = createSlice({\n  name:\"putts\",\n  initialState: initialState,\n  reducers:{\n    changeSomething:changeSomethingr,\n    addPuttToLog:addPuttToLogr\n  }\n})\n\nexport const {\n  addPuttToLog,\n  changeSomething\n} = puttsReducer.actions\n\nexport {getaddnum,getdist,getmeasurement,getStance,getType,getPutts,getDisplay,startLogSession}\n\nexport default puttsReducer.reducer","/home/runner/test-putt/src/pages/Logging/PuttList/index.js",["197","198","199","200","201","202"],"import React from 'react';\n\nimport Putt from './Putt';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {getPutts,getDisplay} from '../../../reducers/putts'\nimport {convertToFt,convertToM} from '../../../utils/convertTo'\nimport SuperTable from '../../../components/SuperTable'\n\nconst columns = [\n  { field: 'num', headerName: 'Ammount', width: 120 },\n  { field: 'dist', headerName: 'Distance', width: 200 },\n  { field: 'type', headerName: 'Type', width: 200 },\n  { field: 'made', headerName: 'Made', width: 200 },\n]\n\nconst PuttList = ({\n  editPutt,\n  deletePutt\n}) => {\n  //hooks\n  const dispatch = useDispatch()\n  const displayType = useSelector(getDisplay)\n  let putts = useSelector(getPutts)\n  //vars\n  const sortPutts = [...putts]\n  sortPutts.sort((a,b)=>a.time-b.time)\n  putts = sortPutts\n\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <SuperTable\n        rows = {putts}\n        collums = {columns}\n        selectable = {true}\n      />\n    </div>\n  )\n  /*\n  return(\n    <div>\n    { (putts) ?  (\n        (displayType === \"single\") ? \n          (<PuttListSingle\n            putts = {putts}\n            edit = {editPutt}\n            delete = {deletePutt}\n          />) : \n          (<PuttListType\n            putts = {putts}\n            edit = {editPutt}\n            delete = {deletePutt}\n          />)\n        ) : (\n          <div>no putts to display</div>\n        )\n    }\n    </div>\n  )*/\n}\n\nconst PuttListSingle = ({\n  putts,\n  editPutt,\n  deletePutt\n}) => (\n  <ul>\n    { \n      putts.map((value)=>(<Putt \n          made = {value.made}\n          num = {value.num}\n          dist = {value.dist}\n          type = {value.type}\n          key = {value.time}\n          editPutt = {editPutt}\n          deletePutt = {deletePutt}\n        />))\n    }\n  </ul>\n);\n\nconst PuttListType = ({\n  putts,\n  editPutt,\n  deletePutt\n}) => (\n  <ul>\n    {\n      Object.entries(putts).forEach(([key,value])=>{\n        (<Putt \n          made = {value.stats.made}\n          num = {value.stats.num}\n          dist = {value.stats.dist}\n          type = {value.stats.type}\n          editPutt = {editPutt}\n          deletePutt = {deletePutt}\n        />)\n      })\n    }\n  </ul>\n);\n\nexport default PuttList;","/home/runner/test-putt/src/pages/Logging/Settings/index.js",[],"/home/runner/test-putt/src/components/UserSessionMonitor/AuthContext.js",[],"/home/runner/test-putt/src/components/UserSessionMonitor/Authorization.js",[],"/home/runner/test-putt/src/pages/Logging/Logbtns.js",["203"],"import React from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nimport {useSelector} from 'react-redux'\nimport {getaddnum} from '../../reducers/putts'\n\nconst SubmitBtn = ({made,onClicked}) => {\n  const num = useSelector(getaddnum);\n\n  const click = (e) => {\n    onClicked(made);\n  }\n  \n  const icon = made ? <AddCircleOutlineIcon/> : <HighlightOffIcon/>;\n\n  return (\n    <span>\n      <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={icon}\n          onClick={click}\n        >\n          Made {num} Putts\n      </Button>\n    </span>\n  )\n}\n\nconst PuttSubmitBtns = ({onClicked}) => (\n<div>\n  <SubmitBtn onClicked = {onClicked} made = {true}/>\n  <SubmitBtn onClicked = {onClicked} made = {false}/>\n</div>\n)\n\nexport default PuttSubmitBtns;","/home/runner/test-putt/src/static/PuttingStancesAndTypes.js",[],"/home/runner/test-putt/src/utils/LocalStorage.js",[],"/home/runner/test-putt/src/utils/puttManager.js",[],"/home/runner/test-putt/src/utils/convertTo.js",[],"/home/runner/test-putt/src/pages/Logging/Settings/PuttStanceChange.js",[],"/home/runner/test-putt/src/pages/Logging/PuttList/Putt.js",[],"/home/runner/test-putt/src/pages/Logging/Settings/PuttDistChange.js",["204","205","206"],"import React, {useState,useEffect} from \"react\"\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport usestyle from './style'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {changeSomething,getdist,getmeasurement} from '../../../reducers/putts'\nimport {convertToFt,convertToM} from '../../../utils/convertTo'\n\nlet marks = [];\n\nconst PuttType = () => {\n  const dispatch = useDispatch()\n  const measurement = useSelector(getmeasurement)\n  const dist = useSelector(getdist)\n  const classes = usestyle()\n  const max = measurement === \"m\" ? convertToM(60,\"ft\") : 60\n  const min = measurement === \"m\" ? convertToM(3,\"ft\") : 3\n  const min2 = measurement === \"m\" ? convertToM(10,\"ft\") : 10\n\n  function valuetext(value) {\n    if(measurement===\"m\"){\n      return convertToM(value,measurement)+measurement\n    } else{\n      return convertToFt(value,measurement)+measurement;\n    }\n  }\n\n  useEffect(() => {\n    marks = []\n    for(let i = min2;i <= max;i+=min2){\n      if(measurement===\"m\"){\n        marks.push(\n          {\n            value: i,\n            label: i+measurement,\n          }\n        )\n      } else{\n        marks.push(\n          {\n            value: i,\n            label: i+measurement,\n          }\n        )\n      }\n    }\n  },[measurement]);\n\n  const onChange = (e,o) =>{\n    dispatch(changeSomething({name:\"dist\",value:o}))\n  }\n\n  return (\n  <span>\n    <Typography id=\"putt-dist-slider\" gutterBottom>\n       Putt Distance\n      </Typography>\n      <Slider\n        track={false}\n        aria-labelledby=\"putt-dist-slider\"\n        getAriaValueText={valuetext}\n        defaultValue={dist}\n        marks={marks}\n        min={min}\n        max={max}\n        value={dist}\n        onChange = {onChange}\n        valueLabelDisplay=\"on\"\n        name = \"dist\"\n      />\n  </span>\n)}\n\nexport default PuttType;","/home/runner/test-putt/src/pages/Logging/Settings/PuttTypeChange.js",[],"/home/runner/test-putt/src/pages/Logging/Settings/PuttNumChange.js",["207","208"],"import React, {useState} from \"react\"\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport usestyle from './style'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {changeSomething,getaddnum} from '../../../reducers/putts'\n\nconst PuttType = () => {\n  const dispatch = useDispatch()\n  const num = useSelector(getaddnum)\n  const classes = usestyle()\n\n  const onChange = (e,o) =>{\n    dispatch(changeSomething({name:\"addnum\",value:o}))\n  }\n\n  return (\n  <span>\n    <Typography id=\"putt-num-slider\" gutterBottom>\n       Ammount of Putts\n      </Typography>\n      <Slider\n        track=\"normal\"\n        aria-labelledby=\"putt-num-slider\"\n        defaultValue={num}\n        marks={false}\n        min={1}\n        max={20}\n        value={num}\n        onChange = {onChange}\n        valueLabelDisplay=\"on\"\n        name = \"num\"\n      />\n  </span>\n)}\n\nexport default PuttType;","/home/runner/test-putt/src/pages/Logging/Settings/style.js",[],"/home/runner/test-putt/src/utils/UTCtime.js",[],"/home/runner/test-putt/src/components/SuperTable/index.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"/home/runner/test-putt/src/components/SuperTable/SuperTableHeader.js",[],"/home/runner/test-putt/src/components/SuperTable/SuperTableToolbar.js",["234","235"],"\nconst SuperTableToolbar = ({}) => {\n\n}\n\nexport default SuperTableToolbar","/home/runner/test-putt/src/components/SuperTable/SuperTableRow.js",[],"/home/runner/test-putt/src/components/SuperTable/SuperTableBody.js",["236","237"],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"246","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":10},{"ruleId":"242","severity":1,"message":"247","line":8,"column":9,"nodeType":"244","messageId":"245","endLine":8,"endColumn":20},{"ruleId":"242","severity":1,"message":"248","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":15},{"ruleId":"242","severity":1,"message":"249","line":9,"column":18,"nodeType":"244","messageId":"245","endLine":9,"endColumn":25},{"ruleId":"242","severity":1,"message":"250","line":13,"column":7,"nodeType":"244","messageId":"245","endLine":13,"endColumn":23},{"ruleId":"242","severity":1,"message":"251","line":22,"column":7,"nodeType":"244","messageId":"245","endLine":22,"endColumn":20},{"ruleId":"242","severity":1,"message":"252","line":27,"column":9,"nodeType":"244","messageId":"245","endLine":27,"endColumn":15},{"ruleId":"242","severity":1,"message":"253","line":27,"column":42,"nodeType":"244","messageId":"245","endLine":27,"endColumn":46},{"ruleId":"242","severity":1,"message":"254","line":27,"column":71,"nodeType":"244","messageId":"245","endLine":27,"endColumn":82},{"ruleId":"242","severity":1,"message":"255","line":27,"column":113,"nodeType":"244","messageId":"245","endLine":27,"endColumn":119},{"ruleId":"242","severity":1,"message":"256","line":27,"column":146,"nodeType":"244","messageId":"245","endLine":27,"endColumn":150},{"ruleId":"257","severity":1,"message":"258","line":35,"column":5,"nodeType":"259","endLine":35,"endColumn":7,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"261","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":14},{"ruleId":"242","severity":1,"message":"262","line":8,"column":8,"nodeType":"244","messageId":"245","endLine":8,"endColumn":18},{"ruleId":"242","severity":1,"message":"263","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":19},{"ruleId":"242","severity":1,"message":"264","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":20},{"ruleId":"242","severity":1,"message":"265","line":196,"column":49,"nodeType":"244","messageId":"245","endLine":196,"endColumn":60},{"ruleId":"242","severity":1,"message":"261","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":14},{"ruleId":"242","severity":1,"message":"266","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":26},{"ruleId":"242","severity":1,"message":"262","line":10,"column":8,"nodeType":"244","messageId":"245","endLine":10,"endColumn":18},{"ruleId":"242","severity":1,"message":"263","line":11,"column":8,"nodeType":"244","messageId":"245","endLine":11,"endColumn":19},{"ruleId":"242","severity":1,"message":"264","line":14,"column":10,"nodeType":"244","messageId":"245","endLine":14,"endColumn":20},{"ruleId":"242","severity":1,"message":"267","line":54,"column":11,"nodeType":"244","messageId":"245","endLine":54,"endColumn":16},{"ruleId":"242","severity":1,"message":"265","line":84,"column":27,"nodeType":"244","messageId":"245","endLine":84,"endColumn":38},{"ruleId":"242","severity":1,"message":"268","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":28},{"ruleId":"242","severity":1,"message":"247","line":7,"column":9,"nodeType":"244","messageId":"245","endLine":7,"endColumn":20},{"ruleId":"242","severity":1,"message":"269","line":7,"column":21,"nodeType":"244","messageId":"245","endLine":7,"endColumn":31},{"ruleId":"242","severity":1,"message":"270","line":22,"column":9,"nodeType":"244","messageId":"245","endLine":22,"endColumn":17},{"ruleId":"242","severity":1,"message":"271","line":23,"column":9,"nodeType":"244","messageId":"245","endLine":23,"endColumn":20},{"ruleId":"242","severity":1,"message":"272","line":63,"column":7,"nodeType":"244","messageId":"245","endLine":63,"endColumn":21},{"ruleId":"242","severity":1,"message":"273","line":83,"column":7,"nodeType":"244","messageId":"245","endLine":83,"endColumn":19},{"ruleId":"242","severity":1,"message":"274","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":20},{"ruleId":"242","severity":1,"message":"275","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":24},{"ruleId":"242","severity":1,"message":"276","line":17,"column":9,"nodeType":"244","messageId":"245","endLine":17,"endColumn":16},{"ruleId":"257","severity":1,"message":"277","line":49,"column":5,"nodeType":"259","endLine":49,"endColumn":18,"suggestions":"278"},{"ruleId":"242","severity":1,"message":"275","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":24},{"ruleId":"242","severity":1,"message":"276","line":13,"column":9,"nodeType":"244","messageId":"245","endLine":13,"endColumn":16},{"ruleId":"242","severity":1,"message":"274","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":20},{"ruleId":"242","severity":1,"message":"279","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":17},{"ruleId":"242","severity":1,"message":"280","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":17},{"ruleId":"242","severity":1,"message":"281","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":17},{"ruleId":"242","severity":1,"message":"282","line":8,"column":8,"nodeType":"244","messageId":"245","endLine":8,"endColumn":23},{"ruleId":"242","severity":1,"message":"283","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":16},{"ruleId":"242","severity":1,"message":"284","line":10,"column":8,"nodeType":"244","messageId":"245","endLine":10,"endColumn":22},{"ruleId":"242","severity":1,"message":"285","line":11,"column":8,"nodeType":"244","messageId":"245","endLine":11,"endColumn":15},{"ruleId":"242","severity":1,"message":"286","line":12,"column":8,"nodeType":"244","messageId":"245","endLine":12,"endColumn":18},{"ruleId":"242","severity":1,"message":"287","line":14,"column":8,"nodeType":"244","messageId":"245","endLine":14,"endColumn":16},{"ruleId":"242","severity":1,"message":"288","line":15,"column":8,"nodeType":"244","messageId":"245","endLine":15,"endColumn":18},{"ruleId":"242","severity":1,"message":"289","line":16,"column":8,"nodeType":"244","messageId":"245","endLine":16,"endColumn":15},{"ruleId":"242","severity":1,"message":"290","line":17,"column":8,"nodeType":"244","messageId":"245","endLine":17,"endColumn":24},{"ruleId":"242","severity":1,"message":"291","line":18,"column":8,"nodeType":"244","messageId":"245","endLine":18,"endColumn":14},{"ruleId":"242","severity":1,"message":"292","line":19,"column":8,"nodeType":"244","messageId":"245","endLine":19,"endColumn":18},{"ruleId":"242","severity":1,"message":"293","line":20,"column":8,"nodeType":"244","messageId":"245","endLine":20,"endColumn":22},{"ruleId":"242","severity":1,"message":"294","line":24,"column":8,"nodeType":"244","messageId":"245","endLine":24,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":27,"column":3,"nodeType":"297","messageId":"298","endLine":80,"endColumn":4},{"ruleId":"257","severity":1,"message":"299","line":108,"column":5,"nodeType":"259","endLine":108,"endColumn":7,"suggestions":"300"},{"ruleId":"242","severity":1,"message":"301","line":112,"column":5,"nodeType":"244","messageId":"245","endLine":112,"endColumn":11},{"ruleId":"242","severity":1,"message":"302","line":115,"column":5,"nodeType":"244","messageId":"245","endLine":115,"endColumn":13},{"ruleId":"242","severity":1,"message":"303","line":117,"column":5,"nodeType":"244","messageId":"245","endLine":117,"endColumn":11},{"ruleId":"242","severity":1,"message":"304","line":121,"column":5,"nodeType":"244","messageId":"245","endLine":121,"endColumn":7},{"ruleId":"242","severity":1,"message":"305","line":122,"column":5,"nodeType":"244","messageId":"245","endLine":122,"endColumn":17},{"ruleId":"242","severity":1,"message":"306","line":123,"column":5,"nodeType":"244","messageId":"245","endLine":123,"endColumn":12},{"ruleId":"242","severity":1,"message":"307","line":2,"column":7,"nodeType":"244","messageId":"245","endLine":2,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":2,"column":28,"nodeType":"310","messageId":"311","endLine":2,"endColumn":30},{"ruleId":"242","severity":1,"message":"312","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":27},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'LS' is defined but never used.","'convertToFt' is defined but never used.","'puttMan' is defined but never used.","'puttobj' is defined but never used.","'Default_Settings' is assigned a value but never used.","'classToObject' is assigned a value but never used.","'addnum' is assigned a value but never used.","'dist' is assigned a value but never used.","'measurement' is assigned a value but never used.","'stance' is assigned a value but never used.","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["315"],"'Link' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'withStyles' is defined but never used.","'savechecked' is assigned a value but never used.","'StyledFirebaseAuth' is defined but never used.","'state' is assigned a value but never used.","'totalrecalc' is defined but never used.","'convertToM' is defined but never used.","'dispatch' is assigned a value but never used.","'displayType' is assigned a value but never used.","'PuttListSingle' is assigned a value but never used.","'PuttListType' is assigned a value but never used.","'makeStyles' is defined but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'max' and 'min2'. Either include them or remove the dependency array.",["316"],"'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'TableSortLabel' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'SuperTableToolbar' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'defaults' and 'props2'. Either include them or remove the dependency array.",["317"],"'onedit' is assigned a value but never used.","'editable' is assigned a value but never used.","'onSort' is assigned a value but never used.","'id' is assigned a value but never used.","'collapseable' is assigned a value but never used.","'toolbar' is assigned a value but never used.","'SuperTableToolbar' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'SuperTableRow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [dispatch]",{"range":"324","text":"325"},"Update the dependencies array to be: [max, measurement, min2]",{"range":"326","text":"327"},"Update the dependencies array to be: [defaults, props2]",{"range":"328","text":"329"},[1117,1119],"[dispatch]",[1303,1316],"[max, measurement, min2]",[2904,2906],"[defaults, props2]"]